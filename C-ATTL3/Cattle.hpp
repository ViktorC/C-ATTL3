/*
 * Cattle.hpp
 *
 *  Created on: 18.01.2018
 *      Author: Viktor Csomor
 */

#ifndef C_ATTL3_CATTLE_H_
#define C_ATTL3_CATTLE_H_

#include "codec/PPMCodec.hpp"
#include "core/Codec.hpp"
#include "core/DataProvider.hpp"
#include "core/Dimensions.hpp"
#include "core/EigenProxy.hpp"
#include "core/GradientCheck.hpp"
#include "core/Layer.hpp"
#include "core/Loss.hpp"
#include "core/NeuralNetwork.hpp"
#include "core/NumericUtils.hpp"
#include "core/Optimizer.hpp"
#include "core/ParameterInitialization.hpp"
#include "core/ParameterRegularization.hpp"
#include "core/Parameters.hpp"
#include "core/Preprocessor.hpp"
#include "data_provider/CIFARDataProvider.hpp"
#include "data_provider/IMDBDataProvider.hpp"
#include "data_provider/JointFileDataProvider.hpp"
#include "data_provider/MNISTDataProvider.hpp"
#include "data_provider/MemoryDataProvider.hpp"
#include "data_provider/PartitionDataProvider.hpp"
#include "data_provider/SplitFileDataProvider.hpp"
#include "layer/activation/BinaryStepActivationLayer.hpp"
#include "layer/activation/ELUActivationLayer.hpp"
#include "layer/activation/IdentityActivationLayer.hpp"
#include "layer/activation/LeakyReLUActivationLayer.hpp"
#include "layer/activation/PReLUActivationLayer.hpp"
#include "layer/activation/PSwishActivationLayer.hpp"
#include "layer/activation/ReLUActivationLayer.hpp"
#include "layer/activation/ScaledActivationLayer.hpp"
#include "layer/activation/SigmoidActivationLayer.hpp"
#include "layer/activation/SoftmaxActivationLayer.hpp"
#include "layer/activation/SoftplusActivationLayer.hpp"
#include "layer/activation/SoftsignActivationLayer.hpp"
#include "layer/activation/SwishActivationLayer.hpp"
#include "layer/activation/TanhActivationLayer.hpp"
#include "layer/kernel/ConvKernelLayer.hpp"
#include "layer/kernel/DenseKernelLayer.hpp"
#include "layer/kernel/TransConvKernelLayer.hpp"
#include "layer/pool/MaxPoolLayer.hpp"
#include "layer/pool/MeanPoolLayer.hpp"
#include "layer/BatchNormLayer.hpp"
#include "layer/BroadcastLayer.hpp"
#include "layer/DropoutLayer.hpp"
#include "layer/ReshapeLayer.hpp"
#include "loss/AbsoluteLoss.hpp"
#include "loss/BinaryCrossEntropyLoss.hpp"
#include "loss/CrossEntropyLoss.hpp"
#include "loss/HingeLoss.hpp"
#include "loss/KullbackLeiblerLoss.hpp"
#include "loss/MultiLabelHingeLoss.hpp"
#include "loss/MultiLabelLogLoss.hpp"
#include "loss/NegatedLoss.hpp"
#include "loss/SoftmaxCrossEntropyLoss.hpp"
#include "loss/SquaredLoss.hpp"
#include "loss/UniversalLoss.hpp"
#include "neural_network/BidirectionalNeuralNetwork.hpp"
#include "neural_network/CompositeNeuralNetwork.hpp"
#include "neural_network/DenseNeuralNetwork.hpp"
#include "neural_network/FeedforwardNeuralNetwork.hpp"
#include "neural_network/LSTMNeuralNetwork.hpp"
#include "neural_network/ParallelNeuralNetwork.hpp"
#include "neural_network/RecurrentNeuralNetwork.hpp"
#include "neural_network/ResidualNeuralNetwork.hpp"
#include "neural_network/SequentialNeuralNetwork.hpp"
#include "neural_network/StackedNeuralNetwork.hpp"
#include "neural_network/UnidirectionalNeuralNetwork.hpp"
#include "optimizer/AMSGradOptimizer.hpp"
#include "optimizer/AdaDeltaOptimizer.hpp"
#include "optimizer/AdaGradOptimizer.hpp"
#include "optimizer/AdaMaxOptimizer.hpp"
#include "optimizer/AdamOptimizer.hpp"
#include "optimizer/MomentumSGDOptimizer.hpp"
#include "optimizer/NadamOptimizer.hpp"
#include "optimizer/NesterovMomentumSGDOptimizer.hpp"
#include "optimizer/RMSPropOptimizer.hpp"
#include "optimizer/SGDOptimizer.hpp"
#include "optimizer/VanillaSGDOptimizer.hpp"
#include "parameter_initialization/ConstantParameterInitialization.hpp"
#include "parameter_initialization/GaussianParameterInitialization.hpp"
#include "parameter_initialization/GlorotParameterInitialization.hpp"
#include "parameter_initialization/HeParameterInitialization.hpp"
#include "parameter_initialization/IncrementalParameterInitialization.hpp"
#include "parameter_initialization/LeCunParameterInitialization.hpp"
#include "parameter_initialization/OneParameterInitialization.hpp"
#include "parameter_initialization/OrthogonalParameterInitialization.hpp"
#include "parameter_initialization/ZeroParameterInitialization.hpp"
#include "parameter_regularization/ElasticNetParameterRegularization.hpp"
#include "parameter_regularization/L1ParameterRegularization.hpp"
#include "parameter_regularization/L2ParameterRegularization.hpp"
#include "parameters/StandardParameters.hpp"
#include "preprocessor/NormalizationPreprocessor.hpp"
#include "preprocessor/PCAPreprocessor.hpp"

#ifdef CATTL3_USE_CUDA
#include "core/gpu/cublas/CuBLASError.hpp"
#include "core/gpu/cublas/CuBLASHandle.hpp"
#include "core/gpu/cublas/CuBLASMatrix.hpp"
#include "core/gpu/cuda/CUDAArray.hpp"
#include "core/gpu/cuda/CUDAError.hpp"
#include "core/gpu/cudnn/CuDNNError.hpp"
#include "core/gpu/cudnn/CuDNNHandle.hpp"
#include "core/gpu/cudnn/CuDNNTensor.hpp"
#include "core/gpu/curand/CuRANDError.hpp"
#include "core/gpu/curand/CuRANDGenerator.hpp"
#include "core/gpu/GPULayer.hpp"
#include "core/gpu/GPUNeuralNetwork.hpp"
#include "core/gpu/GPUParameterInitialization.hpp"
#include "core/gpu/GPUParameterRegularization.hpp"
#include "core/gpu/GPUParameters.hpp"
#include "parameter_initialization/gpu/ConstantGPUParameterInitialization.hpp"
#include "parameter_initialization/gpu/GaussianGPUParameterInitialization.hpp"
#include "parameter_initialization/gpu/GlorotGPUParameterInitialization.hpp"
#include "parameter_initialization/gpu/HeGPUParameterInitialization.hpp"
#include "parameter_initialization/gpu/LeCunGPUParameterInitialization.hpp"
#include "parameter_initialization/gpu/OneGPUParameterInitialization.hpp"
#include "parameter_initialization/gpu/ZeroGPUParameterInitialization.hpp"
#include "parameter_regularization/gpu/L2GPUParameterRegularization.hpp"
#endif

#endif /* C_ATTL3_CATTLE_H_ */
